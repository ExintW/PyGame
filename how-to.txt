角色， 英雄基础设置更改指南：player 文件夹
  
classes.py: 所有已存在英雄的文件， 可以在此创建，更改，删除英雄以及英雄信息，大部分英雄信息和数值可在此修改。
            此文件中，以class开头为一个部分，每个部分代表一个已经创建的英雄，在每个部分中，代码分别代表：
              player: 英雄所属玩家 (此部分在main文件修改）
              name: 英雄名称 （此部分在main文件修改）
              profession: 职业 （通常与 class 后的命名一样但是全部大写）
              pos: 初始位置 （此部分在main文件修改）
              abilities: 技能项目，需了解mechanics文件才能修改英雄所拥有的技能
              sig_ablities：大招，同上
              range: 攻击距离，修改攻击距离及修改等号后面的数字。 （列：Archer（弓箭手）的攻击距离为 2）
              damage: 攻击伤害，修改英雄可造成伤害及修改等号后面的数字。（列 Warrior （战士）的攻击伤害为 2）
              max_health: 最大生命值，修改英雄最大生命值及修改等号后面的数字。（列：Mage (法师） 的最大生命值为 4）
              mobility: 英雄移动距离，修改移动距离及修改等号后面的数字。（列： Warrior（战士）每次移动 2 格）
              max_mana: 英雄最大法力值，法力值决定可发动技能的数量，修改法力值及修改等号后面的数字。 （列：Healer (奶妈）的法力值为 15）
              symbol: 英雄在地图上的代表字符，通常为改英雄的首字母。 （列：Mage （法师）的代表字符为 'M')

              warrior（战士）列子：
              class Warrior(Character): //代表此分区为战士的信息和数值
                  def __init__(self, player=None （所属玩家）, name=None （名称）, profession='WARRIOR' （职业）, pos=None （初始位置）):
                      super().__init__(player=player, name=name, profession=profession, pos=pos,
                         abilities=[Charge(character=self)], //英雄拥有技能
                         range=1, //射程
                         damage=2, //伤害
                         max_health=7, //最大生命值
                         mobility=2, //移动距离
                         max_mana=10, //最大法力值
                         symbol='W') # ⚔️\uFE0E //在地图上的代表字符
        
                  self.buff[Buff_Type.ATK_BUFF].append(Buff('Passive: atk+1', 1, Buff_Type.ATK_BUFF, 1))
